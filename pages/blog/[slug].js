import BlogDetails from "components/blog/blogDetails/blogDetails";
import ScrollIndicator from "components/blog/scrollProgress/ScrollProgress";
import Head from "next/head";

if(process.env.APP_env === 'development') {
  var api_origin = 'https://api.droomwork.io'
} else {
  api_origin = 'http://api.droomwork.io'
  // api_origin = 'http://localhost:3000'
}

if (typeof window !== "undefined") {
  const urlParams = new URLSearchParams(window.location.search)
  const TokenAuthless = urlParams.get('enter')
  if(TokenAuthless){localStorage.setItem('authless', JSON.stringify(TokenAuthless))}
  var Token = JSON.parse(localStorage.getItem("authless"))
}


export default function Details({ postDetails }) {
  console.log(postDetails)
    return (
      <>
        <Head>
          <title>Droomium</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <title>{postDetails.title}</title>
        </Head>
    
        <ScrollIndicator/>
        <BlogDetails postDetails={postDetails} />
      </>
    )
  }

  export async function getStaticProps(context) {

    const { params } = context
    console.log("this is the slug", params.slug)
  
    const response = await fetch(`${api_origin}/api/v1/admin/getBlogPosts/${params.slug}`, {
      headers:{
        'Accept':'application/json',
        'Authorization': `Bearer ${Token}`,
        'Content-type':'application/json',
        'Access-Control-Allow-Origin':'*'
      }
    })
    const post = await response.json()
    // deep nesting
    const data = post.data.data
    // const data = JSON.parse(JSON.stringify(post?.data?.data))
    // const data = JSON.parse(JSON.stringify(dataPost))
    console.log("this is ", post)
  
    return {
      props: {
        postDetails: data[0],
      },
      revalidate: 10,
    }
  
  }

export async function getStaticPaths(){

  const response = await fetch(`${api_origin}/api/v1/admin/getBlogPosts`, {
    headers:{
      'Accept':'application/json',
      'Authorization': `Bearer ${Token}`,
      'Content-type':'application/json',
      'Access-Control-Allow-Origin':'*'
    }
  })
  const data = await response.json()
  console.log("the data", data)
  const paths = data.data.data.map((post) => {
    console.log(post)
    console.log(post.slug)
    return{
      params: {
        slug: `${post.slug}`
      }
    }
  })
  return {
    paths,
    fallback: false,
  }
}

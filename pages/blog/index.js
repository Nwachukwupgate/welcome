import Head from 'next/head'
import Image from 'next/image'
import Content from "components/blog/blogHero/BlogHero";
import TopPost from "components/blog/titleText/TopPost";
import Blog from "components/blog/blogSection/BlogSection";
import Feature from "components/blog/category/Category";
import AllPost from "components/blog/titleText/AllPost";
import AllBlog from "components/blog/fullBlog/AllBlog";


if(process.env.APP_env === 'development') {
  var api_origin = 'https://api.droomwork.io'
} else {
  api_origin = 'http://api.droomwork.io'
  // api_origin = 'http://localhost:3000'
}

if (typeof window !== "undefined") {
  const urlParams = new URLSearchParams(window.location.search)
  const TokenAuthless = urlParams.get('enter')
  if(TokenAuthless){localStorage.setItem('authless', JSON.stringify(TokenAuthless))}
  var Token = JSON.parse(localStorage.getItem("authless"))
}


export default function Home({blogData}) {
  return (
    <>
      <Head>
        <title>Droomium</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Content/>
      <TopPost />
      <Blog shortBlog={blogData}/>
      <Feature />
      {/* <AllPost /> */}
      <AllBlog fullBlog={blogData} />
    </>
  )
}

export async function getStaticProps(){
  
  const response = await fetch(`${api_origin}/api/v1/admin/getBlogPosts`, {
    headers:{
      'Accept':'application/json',
      'User-Agent': '*',
      'Authorization': `Bearer ${Token}`,
      'Content-type':'application/json',
      'Access-Control-Allow-Origin':'*'
    }
  })
  // const data = await JSON.stringify(response.data)
  const data = await response.json()
  // const data = datat.data.data
  console.log(data)

  return{
    props:{
      blogData: data
    },
    revalidate: 10,
  }
}